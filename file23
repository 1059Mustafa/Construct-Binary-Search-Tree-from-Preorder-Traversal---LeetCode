/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* postorder(vector<int>v,int l,int r)
    {
        if(l>r)
        {
            return NULL;
        }
        
        TreeNode* root=new TreeNode(v[l]);
        
        if(l==r)
        {
            return root;
        }
        int idx=l+1;
        
        while(idx<=r&&v[idx]<v[l])
        {
            idx++;
        }
        root->left=postorder(v,l+1,idx-1);
        root->right=postorder(v,idx,r);
        
        return root;
    }

    
    
    TreeNode* bstFromPreorder(vector<int>& preorder) 
    {
        
        int L=0,R=preorder.size()-1;
        return postorder(preorder,L,R);


        //return root;
    }
};
